class Solution {
public:
    vector<int> productExceptSelf(vector<int>& arr) {
     
    vector<int> left;
    vector<int> right;
    vector<int> ans;

    int n = arr.size();
    int pro = 1;
    for (int i = 0; i < n; i++)
    {
        pro = pro * arr[i];
        left.push_back(pro);
    }

  
    pro = 1;

    for (int i = n - 1; i >= 0; i--)
    {
        pro = pro * arr[i];
        right.push_back(pro);
    }


    reverse(right.begin(), right.end());
  

    for (int i = 0; i < n; i++)
    {
        if (i == 0)
        {
            ans.push_back(right[i + 1]);
        }
        else if (i == n - 1)
        {
            ans.push_back(left[i - 1]);
        }
        else
        {
            int x = (left[i - 1]) * (right[i + 1]);
            ans.push_back(x);
        }
    }

       return(ans);
    }
};
