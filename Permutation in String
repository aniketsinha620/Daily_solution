Input: s1 = "ab", s2 = "eidbaooo"
Output: true
Explanation: s2 contains one permutation of s1 ("ba").

Input: s1 = "ab", s2 = "eidboaoo"
Output: false








class Solution {
public:

bool isEqual(map<char,int>m,map<char,int>m1){
       
    for(int i=0;i<26;i++){
        if(m[i+'a']!=m1[i+'a'])
        return  false;}

     return true;
}
    bool checkInclusion(string s1, string s2) {
        map<char,int>m;
        for(int i=0;i<s1.size();i++){
            m[s1[i]]++;
        }

        map<char,int>m1;
        int i=0,j=0;
        while(j<s2.length()){
            m1[s2[j]]++;

            if(j-i+1==s1.length()){
              
                if(isEqual(m,m1)){
                    cout<<isEqual(m,m1);
                    return true;
                }
            }
            if(j-i+1<s1.length()){
                j++;
            }
            else{
                    m1[s2[i]]--;
                    i++;j++;
            }
        }


     return false;

    }
};
